geojson_file <- "us_reshaped.json"
# writeOGR(us_reshaped, geojson_file,layer = "geojson", driver = "GeoJSON")
us_json <- fromJSON(file = "us_reshaped.json")
library(tidyverse)
library(rgdal)
library(maptools)
library(mapproj)
library(rgeos)
library(ggplot2)
library(plotly)
library(rjson)
library(ggridges)
library(readr)
# download and unzip shape files
download.file("https://www2.census.gov/geo/tiger/GENZ2018/shp/cb_2018_us_state_20m.zip", destfile = "states.zip")
unzip("states.zip")
# read shapefile
us <- readOGR(dsn = "cb_2018_us_state_20m.shp", layer = "cb_2018_us_state_20m", verbose = FALSE)
# convert it to Albers equal area
us_aea <- spTransform(us, CRS("+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs"))
us_aea@data$id <- rownames(us_aea@data)
# extract, then rotate, shrink & move alaska (and reset projection)
# need to use state IDs via # https://www.census.gov/geo/reference/ansi_statetables.html
alaska <- us_aea[us_aea$STATEFP=="02",]
alaska <- elide(alaska, rotate=-50)
alaska <- elide(alaska, scale=max(apply(bbox(alaska), 1, diff)) / 2.3)
alaska <- elide(alaska, shift=c(-2100000, -2500000))
proj4string(alaska) <- proj4string(us_aea)
# extract, then rotate & shift hawaii
hawaii <- us_aea[us_aea$STATEFP=="15",]
hawaii <- elide(hawaii, rotate=-35)
hawaii <- elide(hawaii, shift=c(5400000, -1400000))
proj4string(hawaii) <- proj4string(us_aea)
# remove old states and put new ones back in; note the different order
# we're also removing puerto rico in this example but you can move it
# between texas and florida via similar methods to the ones we just used
us_aea <- us_aea[!us_aea$STATEFP %in% c("02", "15", "72"),]
us_reshaped <- rbind(us_aea, alaska, hawaii)
#convert shapefile to geoJSON for plotly/leaflet
geojson_file <- "us_reshaped.json"
writeOGR(us_reshaped, geojson_file,layer = "geojson", driver = "GeoJSON")
us_json <- fromJSON(file = "us_reshaped.json")
# use glimpse(us_reshaped@data) to identify opportunities to join shapefile with other data
# looks like STUSPS or NAME columns in us_reshaped are good join keys
##################3
###################
###################
# other NYT data
# state population data 2019
download.file("https://www2.census.gov/programs-surveys/popest/tables/2010-2019/state/totals/nst-est2019-01.xlsx", destfile = "state_pop.xlsx")
state_pop <- readxl::read_xlsx("state_pop.xlsx", skip = 2) %>%
select('Geographic Area',13) %>%
rename(pop = 2,
state = 'Geographic Area') %>%
mutate(state = str_remove_all(state, '\\.'))
# daily case counts from NYT
daily_states <- read_csv(url("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")) %>%
group_by(state) %>%
arrange(state)
daily_states <- daily_states %>%
mutate(yesterday_date = date - 1)
daily_states <- daily_states %>%
left_join(daily_states, by = c("yesterday_date" = "date", "state" = "state")) %>%
mutate(new_cases = cases.x - cases.y,
new_deaths = deaths.x - deaths.y) %>%
select(date, state, fips.x, cases.x, deaths.x, new_cases, new_deaths) %>%
replace(is.na(.),0) %>%
rename(cases = cases.x,
deaths = deaths.x,
fips = fips.x) %>%
left_join(state_pop, by = c("state" = "state")) %>%
mutate(perc_pop_covid = round(100*cases / pop,3),
perc_pop_death = round(100*deaths / pop,3)) %>%
filter(date > '2020-03-01')
## ridge plot of daily new cases per state
ggplot(daily_states,
aes(x = date,
y = factor(state, levels = rev(unique(state))),
ordered = TRUE,
height = new_cases,
fill = state)) +
geom_density_ridges(stat = "identity",
alpha = .6,
scale = 13,
size = .2) +
#  scale_y_discrete(expand = c(0.01, 0.01)) +
theme_ridges(font_size = 13) +
labs(x = NULL, y = NULL,
title = "Daily New Cases of Covid-19") +
scale_fill_cyclical(values = c("red","orange","yellow")) +
theme(axis.text.y = element_text(size=rel(1)),
panel.grid.major.x = element_blank()) +
coord_fixed(ratio = 20)
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
library(tidyverse)
library(rgdal)
library(maptools)
library(mapproj)
library(rgeos)
library(ggplot2)
library(plotly)
library(rjson)
library(ggridges)
library(readr)
# download and unzip shape files
download.file("https://www2.census.gov/geo/tiger/GENZ2018/shp/cb_2018_us_state_20m.zip", destfile = "states.zip")
unzip("states.zip")
# read shapefile
us <- readOGR(dsn = "cb_2018_us_state_20m.shp", layer = "cb_2018_us_state_20m", verbose = FALSE)
# convert it to Albers equal area
us_aea <- spTransform(us, CRS("+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs"))
us_aea@data$id <- rownames(us_aea@data)
# extract, then rotate, shrink & move alaska (and reset projection)
# need to use state IDs via # https://www.census.gov/geo/reference/ansi_statetables.html
alaska <- us_aea[us_aea$STATEFP=="02",]
alaska <- elide(alaska, rotate=-50)
alaska <- elide(alaska, scale=max(apply(bbox(alaska), 1, diff)) / 2.3)
alaska <- elide(alaska, shift=c(-2100000, -2500000))
proj4string(alaska) <- proj4string(us_aea)
# extract, then rotate & shift hawaii
hawaii <- us_aea[us_aea$STATEFP=="15",]
hawaii <- elide(hawaii, rotate=-35)
hawaii <- elide(hawaii, shift=c(5400000, -1400000))
proj4string(hawaii) <- proj4string(us_aea)
# remove old states and put new ones back in; note the different order
# we're also removing puerto rico in this example but you can move it
# between texas and florida via similar methods to the ones we just used
us_aea <- us_aea[!us_aea$STATEFP %in% c("02", "15", "72"),]
us_reshaped <- rbind(us_aea, alaska, hawaii)
#convert shapefile to geoJSON for plotly/leaflet
geojson_file <- "us_reshaped.json"
#writeOGR(us_reshaped, geojson_file,layer = "geojson", driver = "GeoJSON")
#us_json <- fromJSON(file = "us_reshaped.json")
# use glimpse(us_reshaped@data) to identify opportunities to join shapefile with other data
# looks like STUSPS or NAME columns in us_reshaped are good join keys
##################3
###################
###################
# other NYT data
# state population data 2019
download.file("https://www2.census.gov/programs-surveys/popest/tables/2010-2019/state/totals/nst-est2019-01.xlsx", destfile = "state_pop.xlsx")
state_pop <- readxl::read_xlsx("state_pop.xlsx", skip = 2) %>%
select('Geographic Area',13) %>%
rename(pop = 2,
state = 'Geographic Area') %>%
mutate(state = str_remove_all(state, '\\.'))
# daily case counts from NYT
daily_states <- read_csv(url("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")) %>%
group_by(state) %>%
arrange(state)
daily_states <- daily_states %>%
mutate(yesterday_date = date - 1)
daily_states <- daily_states %>%
left_join(daily_states, by = c("yesterday_date" = "date", "state" = "state")) %>%
mutate(new_cases = cases.x - cases.y,
new_deaths = deaths.x - deaths.y) %>%
select(date, state, fips.x, cases.x, deaths.x, new_cases, new_deaths) %>%
replace(is.na(.),0) %>%
rename(cases = cases.x,
deaths = deaths.x,
fips = fips.x) %>%
left_join(state_pop, by = c("state" = "state")) %>%
mutate(perc_pop_covid = round(100*cases / pop,3),
perc_pop_death = round(100*deaths / pop,3),
new_cases_prop = round(100*new_cases / pop,3),
new_deaths_prop = round(100*new_deaths / pop,3)) %>%
filter(date > '2020-03-01')
## ridge plot of daily new cases per state
ggplot(daily_states,
aes(x = date,
y = factor(state, levels = unique(state)),
ordered = TRUE,
height = new_cases,
fill = state)) +
geom_density_ridges(stat = "identity",
alpha = .6,
scale = 10,
size = .3) +
theme_ridges() +
labs(x = NULL,
y = NULL,
title = "New Daily Cases of Covid-19",
caption = "Data from The New York Times and U.S. Census Bureau.") +
scale_fill_cyclical(values = c("red","orange","yellow")) +
theme(axis.text.y = element_text(size=12),
axis.text.x = element_text(face = "bold"),
panel.grid.major.x = element_blank(),
text=element_text(family="Georgia"),
plot.title = element_text(size=22, face = "bold"),
plot.margin = margin(0,6,0,1,"mm"),
plot.caption = element_text(face = "italic")) +
coord_fixed(ratio = 20)
## ridge plot of daily new cases per state
ggplot(daily_states,
aes(x = date,
y = factor(state, levels = unique(state)),
ordered = TRUE,
height = new_cases,
fill = state)) +
geom_density_ridges(stat = "identity",
alpha = .6,
scale = 10,
size = .3) +
theme_ridges() +
labs(x = NULL,
y = NULL,
title = "New Daily Cases of Covid-19",
caption = "Data from The New York Times and U.S. Census Bureau.") +
scale_fill_cyclical(values = c("red","orange","yellow")) +
theme(axis.text.y = element_text(size=12),
axis.text.x = element_text(face = "bold"),
panel.grid.major.x = element_blank(),
text=element_text(family="Georgia"),
plot.title = element_text(size=22, face = "bold"),
plot.margin = margin(0,6,0,1,"mm"),
plot.caption = element_text(face = "italic")) +
coord_fixed(ratio = 20)
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
library(tidyverse)
library(rgdal)
library(maptools)
library(mapproj)
library(rgeos)
library(ggplot2)
library(plotly)
library(rjson)
library(ggridges)
library(readr)
# download and unzip shape files
download.file("https://www2.census.gov/geo/tiger/GENZ2018/shp/cb_2018_us_state_20m.zip", destfile = "states.zip")
unzip("states.zip")
# read shapefile
us <- readOGR(dsn = "cb_2018_us_state_20m.shp", layer = "cb_2018_us_state_20m", verbose = FALSE)
# convert it to Albers equal area
us_aea <- spTransform(us, CRS("+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs"))
us_aea@data$id <- rownames(us_aea@data)
# extract, then rotate, shrink & move alaska (and reset projection)
# need to use state IDs via # https://www.census.gov/geo/reference/ansi_statetables.html
alaska <- us_aea[us_aea$STATEFP=="02",]
alaska <- elide(alaska, rotate=-50)
alaska <- elide(alaska, scale=max(apply(bbox(alaska), 1, diff)) / 2.3)
alaska <- elide(alaska, shift=c(-2100000, -2500000))
proj4string(alaska) <- proj4string(us_aea)
# extract, then rotate & shift hawaii
hawaii <- us_aea[us_aea$STATEFP=="15",]
hawaii <- elide(hawaii, rotate=-35)
hawaii <- elide(hawaii, shift=c(5400000, -1400000))
proj4string(hawaii) <- proj4string(us_aea)
# remove old states and put new ones back in; note the different order
# we're also removing puerto rico in this example but you can move it
# between texas and florida via similar methods to the ones we just used
us_aea <- us_aea[!us_aea$STATEFP %in% c("02", "15", "72"),]
us_reshaped <- rbind(us_aea, alaska, hawaii)
#convert shapefile to geoJSON for plotly/leaflet
geojson_file <- "us_reshaped.json"
#writeOGR(us_reshaped, geojson_file,layer = "geojson", driver = "GeoJSON")
#us_json <- fromJSON(file = "us_reshaped.json")
# use glimpse(us_reshaped@data) to identify opportunities to join shapefile with other data
# looks like STUSPS or NAME columns in us_reshaped are good join keys
##################3
###################
###################
# other NYT data
# state population data 2019
download.file("https://www2.census.gov/programs-surveys/popest/tables/2010-2019/state/totals/nst-est2019-01.xlsx", destfile = "state_pop.xlsx")
state_pop <- readxl::read_xlsx("state_pop.xlsx", skip = 2) %>%
select('Geographic Area',13) %>%
rename(pop = 2,
state = 'Geographic Area') %>%
mutate(state = str_remove_all(state, '\\.'))
# daily case counts from NYT
daily_states <- read_csv(url("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")) %>%
group_by(state) %>%
arrange(state)
daily_states <- daily_states %>%
mutate(yesterday_date = date - 1)
daily_states <- daily_states %>%
left_join(daily_states, by = c("yesterday_date" = "date", "state" = "state")) %>%
mutate(new_cases = cases.x - cases.y,
new_deaths = deaths.x - deaths.y) %>%
select(date, state, fips.x, cases.x, deaths.x, new_cases, new_deaths) %>%
replace(is.na(.),0) %>%
rename(cases = cases.x,
deaths = deaths.x,
fips = fips.x) %>%
left_join(state_pop, by = c("state" = "state")) %>%
mutate(perc_pop_covid = round(100*cases / pop,3),
perc_pop_death = round(100*deaths / pop,3),
new_cases_prop = round(100*new_cases / pop,3),
new_deaths_prop = round(100*new_deaths / pop,3)) %>%
filter(date > '2020-03-01')
## ridge plot of daily new cases per state
ggplot(daily_states,
aes(x = date,
y = factor(state, levels = rev(unique(state))),
ordered = TRUE,
height = new_cases,
fill = state)) +
geom_density_ridges(stat = "identity",
alpha = .6,
scale = 10,
size = .3) +
theme_ridges() +
labs(x = NULL,
y = NULL,
title = "New Daily Cases of Covid-19",
caption = "Data from The New York Times and U.S. Census Bureau.") +
scale_fill_cyclical(values = c("red","orange","yellow")) +
theme(axis.text.y = element_text(size=12),
axis.text.x = element_text(face = "bold"),
panel.grid.major.x = element_blank(),
text=element_text(family="Georgia"),
plot.title = element_text(size=22, face = "bold"),
plot.margin = margin(0,6,0,1,"mm"),
plot.caption = element_text(face = "italic")) +
coord_fixed(ratio = 20)
## ridge plot of daily new cases per state
ggplot(daily_states,
aes(x = date,
y = factor(state, levels = rev(unique(state))),
ordered = TRUE,
height = new_cases_prop,
fill = state)) +
geom_density_ridges(stat = "identity",
alpha = .6,
scale = 4,
size = .3) +
theme_ridges() +
labs(x = NULL,
y = NULL,
title = "New Daily Cases of Covid-19",
subtitle = "as proportion of each state's population",
caption = "Data from The New York Times and U.S. Census Bureau.") +
scale_fill_cyclical(values = c("purple","blue","green")) +
theme(axis.text.y = element_text(size=12),
axis.text.x = element_text(face = "bold"),
panel.grid.major.x = element_blank(),
text=element_text(family="Georgia"),
plot.title = element_text(size=22, face = "bold"),
plot.margin = margin(0,6,0,1,"mm"),
plot.caption = element_text(face = "italic")) +
coord_fixed(ratio = 20)
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown::serve_site()
blogdown:::preview_site()
library(tidyverse)
library(rgdal)
library(maptools)
library(mapproj)
library(rgeos)
library(ggplot2)
library(plotly)
library(rjson)
library(ggridges)
library(readr)
# download and unzip shape files
download.file("https://www2.census.gov/geo/tiger/GENZ2018/shp/cb_2018_us_state_20m.zip", destfile = "states.zip")
unzip("states.zip")
# read shapefile
us <- readOGR(dsn = "cb_2018_us_state_20m.shp", layer = "cb_2018_us_state_20m", verbose = FALSE)
# convert it to Albers equal area
us_aea <- spTransform(us, CRS("+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs"))
us_aea@data$id <- rownames(us_aea@data)
# extract, then rotate, shrink & move alaska (and reset projection)
# need to use state IDs via # https://www.census.gov/geo/reference/ansi_statetables.html
alaska <- us_aea[us_aea$STATEFP=="02",]
alaska <- elide(alaska, rotate=-50)
alaska <- elide(alaska, scale=max(apply(bbox(alaska), 1, diff)) / 2.3)
alaska <- elide(alaska, shift=c(-2100000, -2500000))
proj4string(alaska) <- proj4string(us_aea)
# extract, then rotate & shift hawaii
hawaii <- us_aea[us_aea$STATEFP=="15",]
hawaii <- elide(hawaii, rotate=-35)
hawaii <- elide(hawaii, shift=c(5400000, -1400000))
proj4string(hawaii) <- proj4string(us_aea)
# remove old states and put new ones back in; note the different order
# we're also removing puerto rico in this example but you can move it
# between texas and florida via similar methods to the ones we just used
us_aea <- us_aea[!us_aea$STATEFP %in% c("02", "15", "72"),]
us_reshaped <- rbind(us_aea, alaska, hawaii)
#convert shapefile to geoJSON for plotly/leaflet
geojson_file <- "us_reshaped.json"
#writeOGR(us_reshaped, geojson_file,layer = "geojson", driver = "GeoJSON")
#us_json <- fromJSON(file = "us_reshaped.json")
# use glimpse(us_reshaped@data) to identify opportunities to join shapefile with other data
# looks like STUSPS or NAME columns in us_reshaped are good join keys
##################3
###################
###################
# other NYT data
# state population data 2019
download.file("https://www2.census.gov/programs-surveys/popest/tables/2010-2019/state/totals/nst-est2019-01.xlsx", destfile = "state_pop.xlsx")
state_pop <- readxl::read_xlsx("state_pop.xlsx", skip = 2) %>%
select('Geographic Area',13) %>%
rename(pop = 2,
state = 'Geographic Area') %>%
mutate(state = str_remove_all(state, '\\.'))
# daily case counts from NYT
daily_states <- read_csv(url("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv")) %>%
group_by(state) %>%
arrange(state)
daily_states <- daily_states %>%
mutate(yesterday_date = date - 1)
daily_states <- daily_states %>%
left_join(daily_states, by = c("yesterday_date" = "date", "state" = "state")) %>%
mutate(new_cases = cases.x - cases.y,
new_deaths = deaths.x - deaths.y) %>%
select(date, state, fips.x, cases.x, deaths.x, new_cases, new_deaths) %>%
replace(is.na(.),0) %>%
rename(cases = cases.x,
deaths = deaths.x,
fips = fips.x) %>%
left_join(state_pop, by = c("state" = "state")) %>%
mutate(perc_pop_covid = round(100*cases / pop,3),
perc_pop_death = round(100*deaths / pop,3),
new_cases_prop = round(100*new_cases / pop,3),
new_deaths_prop = round(100*new_deaths / pop,3)) %>%
filter(date > '2020-03-01')
## ridge plot of daily new cases per state
ggplot(daily_states,
aes(x = date,
y = factor(state, levels = rev(unique(state))),
ordered = TRUE,
height = new_cases,
fill = state)) +
geom_density_ridges(stat = "identity",
alpha = .6,
scale = 10,
size = .3) +
theme_ridges() +
labs(x = NULL,
y = NULL,
title = "New Daily Cases of Covid-19",
caption = "Data from The New York Times and U.S. Census Bureau.") +
scale_fill_cyclical(values = c("red","orange","yellow")) +
theme(axis.text.y = element_text(size=12),
axis.text.x = element_text(face = "bold"),
panel.grid.major.x = element_blank(),
text=element_text(family="Georgia"),
plot.title = element_text(size=22, face = "bold"),
plot.margin = margin(0,6,0,1,"mm"),
plot.caption = element_text(face = "italic")) +
coord_fixed(ratio = 20)
## ridge plot of daily new cases per state
ggplot(daily_states,
aes(x = date,
y = factor(state, levels = rev(unique(state))),
ordered = TRUE,
height = new_cases_prop,
fill = state)) +
geom_density_ridges(stat = "identity",
alpha = .6,
scale = 4,
size = .3) +
theme_ridges() +
labs(x = NULL,
y = NULL,
title = "New Daily Cases of Covid-19",
subtitle = "as proportion of each state's population",
caption = "Data from The New York Times and U.S. Census Bureau.") +
scale_fill_cyclical(values = c("purple","blue","green")) +
theme(axis.text.y = element_text(size=12),
axis.text.x = element_text(face = "bold"),
panel.grid.major.x = element_blank(),
text=element_text(family="Georgia"),
plot.title = element_text(size=22, face = "bold"),
plot.margin = margin(0,6,0,1,"mm"),
plot.caption = element_text(face = "italic")) +
coord_fixed(ratio = 20)
blogdown::serve_site()
blogdown:::preview_site()
