knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(janitor)
library(readxl)
library(gt)
library(ggthemes)
library(data.table)
download.file(url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/media-mentions-2020/cable_weekly.csv",
destfile  = "~/Desktop/R.projects/personal_site/content/moment/cable_weekly.csv",
mode = "wb")
download.file(url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/media-mentions-2020/online_weekly.csv",
destfile  = "~/Desktop/R.projects/personal_site/content/moment/online_weekly.csv",
mode = "wb")
cable <- read_csv("cable_weekly.csv")
online <- read_csv("online_weekly.csv")
fs::file_delete(c("cable_weekly.csv", "online_weekly.csv"))
cable_joined_online <- merge(cable, online, by = c("name","date" ))
clean_cable_joined_online <- cable_joined_online %>%
filter(name %in% c("Joe Biden",
"Pete Buttigieg",
"Elizabeth Warren",
"Kamala Harris",
"Bernie Sanders",
"Beto O'Rourke",
"Julian Castro",
"Amy Klobuchar",
"Cory Booker")) %>%
group_by(name)
# Needed to distinguish on graph w/ fill and color
clean_cable_joined_online$query.x <- "Cable News"
clean_cable_joined_online$query.y <- "Online Articles"
# Start graph
ggplot(clean_cable_joined_online, aes(x = date,
y = pct_of_all_candidate_stories,
color = query.x,
fill = query.x)) +
geom_point() +
geom_smooth(level  = .50, method = "loess") +
# for second line
geom_point(aes(x = date,
y = pct_of_all_candidate_clips,
color = query.y,
fill = query.y)) +
geom_smooth(aes(x = date,
y = pct_of_all_candidate_clips,
color = query.y,
fill = query.y),
level  = .50, method = "loess") +
# Makes scale more readable
scale_y_sqrt(labels = scales::percent,
breaks = c(.01, .025, .05, 0.1, .3, 0.2, 0.4, .5, .6)) +
facet_wrap(~name) +
#  scale_x_date(date_breaks = "1 month") +
# Style Settings
labs(x = NULL, y = "Percent of Articles and Stories That Mention Each Candidate",
title = "How often are the candidates mentioned in cable and online news?",
subtitle = "Cable includes CNN, Fox News, and MSNBC - Online articles sourced from the Media Cloud database",
caption = "Source: FiveThirtyEight.com. Percentages can add to greater than 100% since articles or stories often mention multiple candidates.") +
scale_color_brewer(palette = "Paired") +
scale_fill_brewer(palette = "Paired") +
scale_fill_discrete(name = "Media Type") +
scale_color_discrete(name = "Media Type") +
theme_tufte() +
theme(plot.title = element_text(size = rel(1.5), face ="bold"),
plot.subtitle = element_text(face = "italic"),
legend.title = element_text(size = rel(1.2), face = "bold"),
axis.title.y = element_text(size = rel(1.2)),
plot.caption = element_text(face = "italic"),
panel.grid.major.y = element_line(color = "gray"),
axis.line.x = element_line(), axis.line.y = element_line())
# Cable table data
cable_table <- cable %>%
select(name, date, pct_of_all_candidate_clips) %>%
filter(date == "2019-01-06" | date == "2019-07-07") %>%
spread(key = date, value = pct_of_all_candidate_clips) %>%
setnames(old=c("2019-01-06","2019-07-07"), new=c("Jan. 6th Cable", "Jul. 7th Cable"))
cable_table <- cable_table %>%
mutate("Percent Cable Change" = cable_table$'Jul. 7th Cable' - cable_table$'Jan. 6th Cable')
# Online table data
online_table <- online %>%
select(name, date, pct_of_all_candidate_stories) %>%
filter(date == "2019-01-06" | date == "2019-07-07") %>%
spread(key = date, value = pct_of_all_candidate_stories) %>%
setnames(old=c("2019-01-06","2019-07-07"), new=c("Jan. 6th Online", "Jul. 7th Online"))
online_table <- online_table %>%
mutate("Percent Online Change" = online_table$'Jul. 7th Online' - online_table$'Jan. 6th Online')
# join data
joined_table <- left_join(cable_table, online_table)
# construct table
gt(joined_table) %>%
tab_header(
title = md("**How much has coverage changed between January and now?**"),
subtitle = "January 6th to July 7th, 2019") %>%
# Here I simply column names.
cols_label(name = "Candidate",
"Jan. 6th Cable" = "Jan. 6",
"Jul. 7th Cable" = "Jul. 7th",
"Percent Cable Change" = "Percent Change",
"Jan. 6th Online" = "Jan. 6th",
"Jul. 7th Online" = "Jul. 7th",
"Percent Online Change" = "Percent Change") %>%
fmt_percent(columns = vars("Jan. 6th Cable",
"Jul. 7th Cable",
"Percent Cable Change",
"Jan. 6th Online",
"Jul. 7th Online",
"Percent Online Change"),
decimals = 1)  %>%
tab_spanner(label = "Cable Clips",
columns = vars("Jan. 6th Cable", "Jul. 7th Cable", "Percent Cable Change")) %>%
tab_spanner(label = "Online Articles",
columns = vars("Jan. 6th Online", "Jul. 7th Online", "Percent Online Change")) %>%
tab_source_note("Source: Internet Archive's Television News Archive via the GDELT Project, Media Cloud, all via FiveThirtyEight.com") %>%
tab_source_note("Per FiveThirtyEight: “Includes all candidates that qualify as “major” in FiveThirtyEight’s rubric. Each network’s daily news coverage is chopped up into 15-second clips, and each clip that includes a candidate’s name is counted as one mention. For both cable and online news, our search queries look for an exact match for each candidate’s name, except for Julian Castro, for whom our search query is “Julian Castro” OR “Julián Castro”. Media Cloud searches use two of the database’s publication lists: “top online news” and “digital native” publications.”")  %>%
# add cell coloring
data_color(
columns = vars("Percent Cable Change"),
colors = scales::col_quantile(
palette = c(
"#FF9999", "#CCCCCC", "#66FF66"),
domain = NULL)) %>%
data_color(
columns = vars("Percent Online Change"),
colors = scales::col_quantile(
palette = c(
"#FF9999", "#CCCCCC", "#66FF66"),
domain = NULL)) %>%
# text aesthetics
tab_options(
table.width = 500,
table.font.size = 12,
column_labels.font.size = 16,
column_labels.font.weight = "bold",
table.border.top.style = "none",
# the magic fix to oversizing!
row.padding = 3)
# This sequence of functions allows the table to transfer nicely into RMarkdown.
#  as_raw_html() %>% as.character() %>% cat()
# Cable table data
cable_table_bump <- cable %>%
select(name, date, pct_of_all_candidate_clips) %>%
filter(date == "2019-06-16" | date == "2019-06-23") %>%
spread(key = date, value = pct_of_all_candidate_clips) %>%
setnames(old=c("2019-06-16","2019-06-23"), new=c("Before", "After"))
cable_table_bump <- cable_table_bump %>%
mutate("Percent Cable Change" = cable_table_bump$'After' - cable_table_bump$'Before')
# Online table data
online_table_bump <- online %>%
select(name, date, pct_of_all_candidate_stories) %>%
filter(date == "2019-06-16" | date == "2019-06-23") %>%
spread(key = date, value = pct_of_all_candidate_stories) %>%
setnames(old=c("2019-06-16","2019-06-23"), new=c("Before", "After"))
online_table_bump <- online_table_bump %>%
mutate("Percent Online Change" = online_table_bump$'After' - online_table_bump$'Before')
# join data
joined_table_bump <- left_join(cable_table_bump, online_table_bump, by = "name")
# construct table
gt(joined_table_bump) %>%
tab_header(
title = "How did the first debates change candidate coverage?",
subtitle = "June 16th to June 23rd, 2019") %>%
# Here I simply column names.
cols_label(name = "Candidate",
"Before.x" = "Before",
"After.x" = "After",
"Before.y" = "Before",
"After.y" = "After",
"Percent Cable Change" = "Change",
"Percent Online Change" = "Change") %>%
fmt_percent(columns = vars("Before.x",
"After.x",
"Percent Cable Change",
"Before.y",
"After.y",
"Percent Online Change"),
decimals = 1)  %>%
tab_spanner(label = "Cable Clips",
columns = vars("Before.x", "After.x", "Percent Cable Change")) %>%
tab_spanner(label = "Online Articles",
columns = vars("Before.y", "After.y", "Percent Online Change")) %>%
tab_source_note("Source: Same as above.") %>%
# add cell coloring
data_color(
columns = vars("Percent Cable Change"),
colors = scales::col_quantile(
palette = c(
"#FF9999", "#CCCCCC", "#66FF66"),
domain = NULL)) %>%
data_color(
columns = vars("Percent Online Change"),
colors = scales::col_quantile(
palette = c(
"#FF9999", "#CCCCCC", "#66FF66"),
domain = NULL)) %>%
tab_options(
table.width = 50,
table.font.size = 12,
column_labels.font.size = 16,
column_labels.font.weight = "bold",
table.border.top.style = "none",
# the magic fix to oversizing!
row.padding = 3)
# This sequence of functions allows the table to transfer nicely into RMarkdown.
# as_raw_html() %>% as.character() %>% cat()
# construct table
gt(joined_table) %>%
tab_header(
title = md("**How much has coverage changed between January and now?**"),
subtitle = "January 6th to July 7th, 2019") %>%
# Here I simply column names.
cols_label(name = "Candidate",
"Jan. 6th Cable" = "Jan. 6",
"Jul. 7th Cable" = "Jul. 7th",
"Percent Cable Change" = "Percent Change",
"Jan. 6th Online" = "Jan. 6th",
"Jul. 7th Online" = "Jul. 7th",
"Percent Online Change" = "Percent Change") %>%
fmt_percent(columns = vars("Jan. 6th Cable",
"Jul. 7th Cable",
"Percent Cable Change",
"Jan. 6th Online",
"Jul. 7th Online",
"Percent Online Change"),
decimals = 1)  %>%
tab_spanner(label = "Cable Clips",
columns = vars("Jan. 6th Cable", "Jul. 7th Cable", "Percent Cable Change")) %>%
tab_spanner(label = "Online Articles",
columns = vars("Jan. 6th Online", "Jul. 7th Online", "Percent Online Change")) %>%
tab_source_note("Source: Internet Archive's Television News Archive via the GDELT Project, Media Cloud, all via FiveThirtyEight.com") %>%
tab_source_note("Per FiveThirtyEight: “Includes all candidates that qualify as “major” in FiveThirtyEight’s rubric. Each network’s daily news coverage is chopped up into 15-second clips, and each clip that includes a candidate’s name is counted as one mention. For both cable and online news, our search queries look for an exact match for each candidate’s name, except for Julian Castro, for whom our search query is “Julian Castro” OR “Julián Castro”. Media Cloud searches use two of the database’s publication lists: “top online news” and “digital native” publications.”")  %>%
# add cell coloring
data_color(
columns = vars("Percent Cable Change"),
colors = scales::col_quantile(
palette = c(
"#FF9999", "#CCCCCC", "#66FF66"),
domain = NULL)) %>%
data_color(
columns = vars("Percent Online Change"),
colors = scales::col_quantile(
palette = c(
"#FF9999", "#CCCCCC", "#66FF66"),
domain = NULL)) %>%
# text aesthetics
tab_options(
table.width = 750,
table.font.size = 12,
column_labels.font.size = 16,
column_labels.font.weight = "bold",
table.border.top.style = "none",
# the magic fix to oversizing!
row.padding = 3)
# This sequence of functions allows the table to transfer nicely into RMarkdown.
#  as_raw_html() %>% as.character() %>% cat()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(janitor)
library(readxl)
library(gt)
library(ggthemes)
library(data.table)
download.file(url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/media-mentions-2020/cable_weekly.csv",
destfile  = "~/Desktop/R.projects/personal_site/content/moment/cable_weekly.csv",
mode = "wb")
download.file(url = "https://raw.githubusercontent.com/fivethirtyeight/data/master/media-mentions-2020/online_weekly.csv",
destfile  = "~/Desktop/R.projects/personal_site/content/moment/online_weekly.csv",
mode = "wb")
cable <- read_csv("cable_weekly.csv")
online <- read_csv("online_weekly.csv")
fs::file_delete(c("cable_weekly.csv", "online_weekly.csv"))
cable_joined_online <- merge(cable, online, by = c("name","date" ))
clean_cable_joined_online <- cable_joined_online %>%
filter(name %in% c("Joe Biden",
"Pete Buttigieg",
"Elizabeth Warren",
"Kamala Harris",
"Bernie Sanders",
"Beto O'Rourke",
"Julian Castro",
"Amy Klobuchar",
"Cory Booker")) %>%
group_by(name)
# Needed to distinguish on graph w/ fill and color
clean_cable_joined_online$query.x <- "Cable News"
clean_cable_joined_online$query.y <- "Online Articles"
# Start graph
ggplot(clean_cable_joined_online, aes(x = date,
y = pct_of_all_candidate_stories,
color = query.x,
fill = query.x)) +
geom_point() +
geom_smooth(level  = .50, method = "loess") +
# for second line
geom_point(aes(x = date,
y = pct_of_all_candidate_clips,
color = query.y,
fill = query.y)) +
geom_smooth(aes(x = date,
y = pct_of_all_candidate_clips,
color = query.y,
fill = query.y),
level  = .50, method = "loess") +
# Makes scale more readable
scale_y_sqrt(labels = scales::percent,
breaks = c(.01, .025, .05, 0.1, .3, 0.2, 0.4, .5, .6)) +
facet_wrap(~name) +
#  scale_x_date(date_breaks = "1 month") +
# Style Settings
labs(x = NULL, y = "Percent of Articles and Stories That Mention Each Candidate",
title = "How often are the candidates mentioned in cable and online news?",
subtitle = "Cable includes CNN, Fox News, and MSNBC - Online articles sourced from the Media Cloud database",
caption = "Source: FiveThirtyEight.com. Percentages can add to greater than 100% since articles or stories often mention multiple candidates.") +
scale_color_brewer(palette = "Paired") +
scale_fill_brewer(palette = "Paired") +
scale_fill_discrete(name = "Media Type") +
scale_color_discrete(name = "Media Type") +
theme_tufte() +
theme(plot.title = element_text(size = rel(1.5), face ="bold"),
plot.subtitle = element_text(face = "italic"),
legend.title = element_text(size = rel(1.2), face = "bold"),
axis.title.y = element_text(size = rel(1.2)),
plot.caption = element_text(face = "italic"),
panel.grid.major.y = element_line(color = "gray"),
axis.line.x = element_line(), axis.line.y = element_line())
# Cable table data
cable_table <- cable %>%
select(name, date, pct_of_all_candidate_clips) %>%
filter(date == "2019-01-06" | date == "2019-07-07") %>%
spread(key = date, value = pct_of_all_candidate_clips) %>%
setnames(old=c("2019-01-06","2019-07-07"), new=c("Jan. 6th Cable", "Jul. 7th Cable"))
cable_table <- cable_table %>%
mutate("Percent Cable Change" = cable_table$'Jul. 7th Cable' - cable_table$'Jan. 6th Cable')
# Online table data
online_table <- online %>%
select(name, date, pct_of_all_candidate_stories) %>%
filter(date == "2019-01-06" | date == "2019-07-07") %>%
spread(key = date, value = pct_of_all_candidate_stories) %>%
setnames(old=c("2019-01-06","2019-07-07"), new=c("Jan. 6th Online", "Jul. 7th Online"))
online_table <- online_table %>%
mutate("Percent Online Change" = online_table$'Jul. 7th Online' - online_table$'Jan. 6th Online')
# join data
joined_table <- left_join(cable_table, online_table)
# construct table
gt(joined_table) %>%
tab_header(
title = md("**How much has coverage changed between January and now?**"),
subtitle = "January 6th to July 7th, 2019") %>%
# Here I simply column names.
cols_label(name = "Candidate",
"Jan. 6th Cable" = "Jan. 6",
"Jul. 7th Cable" = "Jul. 7th",
"Percent Cable Change" = "Percent Change",
"Jan. 6th Online" = "Jan. 6th",
"Jul. 7th Online" = "Jul. 7th",
"Percent Online Change" = "Percent Change") %>%
fmt_percent(columns = vars("Jan. 6th Cable",
"Jul. 7th Cable",
"Percent Cable Change",
"Jan. 6th Online",
"Jul. 7th Online",
"Percent Online Change"),
decimals = 1)  %>%
tab_spanner(label = "Cable Clips",
columns = vars("Jan. 6th Cable", "Jul. 7th Cable", "Percent Cable Change")) %>%
tab_spanner(label = "Online Articles",
columns = vars("Jan. 6th Online", "Jul. 7th Online", "Percent Online Change")) %>%
tab_source_note("Source: Internet Archive's Television News Archive via the GDELT Project, Media Cloud, all via FiveThirtyEight.com") %>%
tab_source_note("Per FiveThirtyEight: “Includes all candidates that qualify as “major” in FiveThirtyEight’s rubric. Each network’s daily news coverage is chopped up into 15-second clips, and each clip that includes a candidate’s name is counted as one mention. For both cable and online news, our search queries look for an exact match for each candidate’s name, except for Julian Castro, for whom our search query is “Julian Castro” OR “Julián Castro”. Media Cloud searches use two of the database’s publication lists: “top online news” and “digital native” publications.”")  %>%
# add cell coloring
data_color(
columns = vars("Percent Cable Change"),
colors = scales::col_quantile(
palette = c(
"#FF9999", "#CCCCCC", "#66FF66"),
domain = NULL)) %>%
data_color(
columns = vars("Percent Online Change"),
colors = scales::col_quantile(
palette = c(
"#FF9999", "#CCCCCC", "#66FF66"),
domain = NULL)) %>%
# text aesthetics
tab_options(
table.width = 750,
table.font.size = 12,
column_labels.font.size = 16,
column_labels.font.weight = "bold",
table.border.top.style = "none",
# the magic fix to oversizing!
row.padding = 3)
# This sequence of functions allows the table to transfer nicely into RMarkdown.
#  as_raw_html() %>% as.character() %>% cat()
# Cable table data
cable_table_bump <- cable %>%
select(name, date, pct_of_all_candidate_clips) %>%
filter(date == "2019-06-16" | date == "2019-06-23") %>%
spread(key = date, value = pct_of_all_candidate_clips) %>%
setnames(old=c("2019-06-16","2019-06-23"), new=c("Before", "After"))
cable_table_bump <- cable_table_bump %>%
mutate("Percent Cable Change" = cable_table_bump$'After' - cable_table_bump$'Before')
# Online table data
online_table_bump <- online %>%
select(name, date, pct_of_all_candidate_stories) %>%
filter(date == "2019-06-16" | date == "2019-06-23") %>%
spread(key = date, value = pct_of_all_candidate_stories) %>%
setnames(old=c("2019-06-16","2019-06-23"), new=c("Before", "After"))
online_table_bump <- online_table_bump %>%
mutate("Percent Online Change" = online_table_bump$'After' - online_table_bump$'Before')
# join data
joined_table_bump <- left_join(cable_table_bump, online_table_bump, by = "name")
# construct table
gt(joined_table_bump) %>%
tab_header(
title = "How did the first debates change candidate coverage?",
subtitle = "June 16th to June 23rd, 2019") %>%
# Here I simply column names.
cols_label(name = "Candidate",
"Before.x" = "Before",
"After.x" = "After",
"Before.y" = "Before",
"After.y" = "After",
"Percent Cable Change" = "Change",
"Percent Online Change" = "Change") %>%
fmt_percent(columns = vars("Before.x",
"After.x",
"Percent Cable Change",
"Before.y",
"After.y",
"Percent Online Change"),
decimals = 1)  %>%
tab_spanner(label = "Cable Clips",
columns = vars("Before.x", "After.x", "Percent Cable Change")) %>%
tab_spanner(label = "Online Articles",
columns = vars("Before.y", "After.y", "Percent Online Change")) %>%
tab_source_note("Source: Same as above.") %>%
# add cell coloring
data_color(
columns = vars("Percent Cable Change"),
colors = scales::col_quantile(
palette = c(
"#FF9999", "#CCCCCC", "#66FF66"),
domain = NULL)) %>%
data_color(
columns = vars("Percent Online Change"),
colors = scales::col_quantile(
palette = c(
"#FF9999", "#CCCCCC", "#66FF66"),
domain = NULL)) %>%
tab_options(
table.width = 750,
table.font.size = 12,
column_labels.font.size = 16,
column_labels.font.weight = "bold",
table.border.top.style = "none",
# the magic fix to oversizing!
row.padding = 3)
# This sequence of functions allows the table to transfer nicely into RMarkdown.
# as_raw_html() %>% as.character() %>% cat()
blogdown:::serve_site()
install.packages("mosaic")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
update
blogdown::update_hugo()
blogdown::serve_site()
blogdown::serve_site()
blogdown::hugo_version()
blogdown::hugo_version()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(cache = TRUE)
library(tidyverse)
library(gapminder)
library(ggplot2)
library(gganimate)
gapminder %>%
mutate(continent = fct_collapse(continent,
Asia =  c("Asia", "Oceania"))) %>%
filter(continent %in% c("Americas", "Africa", "Asia")) %>%
# changes order of continents in columns
mutate(continent = fct_relevel(continent, c("Americas", "Africa", "Asia"))) %>%
ggplot(aes(x = gdpPercap, y = lifeExp, size = pop, color = country)) +
geom_point(alpha = .7, show.legend = FALSE) +
facet_wrap(~continent) +
scale_colour_manual(values = country_colors) +
# makes x-axis scale more accessible
scale_x_log10(breaks = c(1000,10000), labels = c("$1,000", "$10,000")) +
# using {} within title allows variable year to change
labs(title = "The World Gets Better Every Year: ",
subtitle = "{frame_time}",
caption = "Source: Gapminder Package",
x = "GDP Per Capita",
y = "Life Expectancy") +
# gganimate part
transition_time(year) +
ease_aes('linear')
blogdown
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
